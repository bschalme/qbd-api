version: 0.2
env:
  parameter-store:
    build_ssh_key: "build_ssh_key"
    build_ssh_pass: "build_ssh_pass"
phases:
  install:
    commands:
      - mkdir -p ~/.ssh
      - echo "$build_ssh_key" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - ssh-keygen -F github.com || ssh-keyscan github.com >>~/.ssh/known_hosts
      - eval "$(ssh-agent -s)"
      - echo "$build_ssh_pass" | ssh-add ~/.ssh/id_rsa
      - git config --global url."git@github.com:".insteadOf "https://github.com/"
      - git init
      - git remote add origin git@github.com:bschalme/qbd-api.git
      - git fetch
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      # Retrieves docker credentials so that the subsequent docker push command is
      # authorized. Authentication is performed automatically by the AWS CLI
      # using the AWS credentials associated with the IAM role assigned to the
      # instances in your AWS CodeBuild project.
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Build started on `date`
      - ./gradlew --stacktrace build
      - docker build -t qbd-api:latest .
      - docker tag qbd-api:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/qbd-api:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image..
      # Push the image to ECR.
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/qbd-api:latest
      - echo Completed pushing Docker image. Deploying Docker image to AWS Fargate on `date`
      # Create a artifacts file that contains the name and location of the image
      # pushed to ECR. This will be used by AWS CodePipeline to automate
      # deployment of this specific container to Amazon ECS.
      - printf '[{"name":"Qbd-Api","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/qbd-api:latest > imagedefinitions.json
artifacts:
  # Indicate that the created imagedefinitions.json file created on the previous
  # line is to be referenceable as an artifact of the build execution job.
  files:
    - imagedefinitions.json
reports: #New
  SurefireReports: # CodeBuild will create a report group called "SurefireReports".
    files: #Store all of the files
      - '**/*'
    base-directory: 'build/test-results/test' # Location of the reports 
